"""
https://school.programmers.co.kr/learn/courses/30/lessons/120956#

문제설명

머쓱이는 태어난 지 6개월 된 조카를 돌보고 있습니다. 조카는 아직 "aya", "ye", "woo", "ma" 네 가지 발음을 최대 한 번씩 사용해 조합한(이어 붙인) 발음밖에 하지 못합니다. 문자열 배열 babbling이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return하도록 solution 함수를 완성해주세요.

제한사항
1 ≤ babbling의 길이 ≤ 100
1 ≤ babbling[i]의 길이 ≤ 15
babbling의 각 문자열에서 "aya", "ye", "woo", "ma"는 각각 최대 한 번씩만 등장합니다.
즉, 각 문자열의 가능한 모든 부분 문자열 중에서 "aya", "ye", "woo", "ma"가 한 번씩만 등장합니다.
문자열은 알파벳 소문자로만 이루어져 있습니다.

유의사항
네 가지를 붙여 만들 수 있는 발음 이외에는 어떤 발음도 할 수 없는 것으로 규정합니다. 예를 들어 "woowo"는 "woo"는 발음할 수 있지만 "wo"를 발음할 수 없기 때문에 할 수 없는 발음입니다.
"""
# 가능한 발음을 리스트에 담기
# 가능횟수 변수 만들기
# 문자열의 각 문자에서 가능발음을 빼기 >>> 문자열은 뺄셈이 안되서 특정 글자로 바꾸기
# 문자가 발음가능 문자로만 이루어져 있는지 판별
# 가능할 때마다 가능횟수 증가


def solution(babbling):
    p = ["aya", "ye", "woo", "ma"]
    count = 0
    for i in babbling: # 주어진 문자열에서 문자를 하나씩 뽑고
        for a in p: # 가능 발음들을 하나씩 뽑아서
            if a in i: # 주어진 문자에 가능 발음이 있으면
                i = i.replace(a," ") # 주어진 문자열에서 가능발음을 공백으로 바꾼다
            if len(i) - i.count(" ") == 0: # 공백처리하고 난 뒤 문자열의 길이가 공백처리한 갯수와 같으면 (문자열이 가능발음으로만 이루어져 있으면)
                count +=1
                break # 이게 필수! (생각해보자)
    return count